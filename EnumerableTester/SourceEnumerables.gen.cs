using System;
using System.Linq;

namespace EnumerableTester
{
    public static partial class SourceEnumerables
    {
        public static Int32[] IncrementedInt32 = Enumerable.Range(0, 1000).Select(i => ConvertToInt32(i)).ToArray();
        public static Int32[] DecrementedInt32 = Enumerable.Range(0, 1000).Select(i => ConvertToInt32(999 - i)).ToArray();
        public static Int32[] UpAndDownInt32 = IncrementedInt32.Interweave(DecrementedInt32).Take(1000).ToArray();
        public static Int32[] ShuffledInt32 = IncrementedInt32.ToShuffled(1).ToArray();
        public static Int32[] EmptyInt32 = new Int32[0];
        public static Int32[] SolitaireInt32 = new Int32[]{ConvertToInt32(0)};
     
        public static Int32?[] IncrementedNullableInt32 = Enumerable.Range(0, 1000).Select(i => (Int32?)ConvertToInt32(i)).ToArray();
        public static Int32?[] DecrementedNullableInt32 = Enumerable.Range(0, 1000).Select(i => (Int32?)ConvertToInt32(999 - i)).ToArray();
        public static Int32?[] UpAndDownNullableInt32 = IncrementedNullableInt32.Interweave(DecrementedNullableInt32).ToArray();
        public static Int32?[] ShuffledNullableInt32 = IncrementedNullableInt32.ToShuffled(1).ToArray();
        public static Int32?[] EmptyNullableInt32 = new Int32?[0];
        public static Int32?[] SolitaireNullableInt32 = new Int32?[]{ConvertToInt32(0)};
        public static Int32?[] SolitaireNullInt32 = new Int32?[]{null};
                    public static Int32?[] NullableInt3210PercentNulled = IncrementedNullableInt32.MixIn(1, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3220PercentNulled = IncrementedNullableInt32.MixIn(2, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3230PercentNulled = IncrementedNullableInt32.MixIn(3, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3240PercentNulled = IncrementedNullableInt32.MixIn(4, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3250PercentNulled = IncrementedNullableInt32.MixIn(5, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3260PercentNulled = IncrementedNullableInt32.MixIn(6, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3270PercentNulled = IncrementedNullableInt32.MixIn(7, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3280PercentNulled = IncrementedNullableInt32.MixIn(8, 10, 1, (Int32?)null).ToArray();
                    public static Int32?[] NullableInt3290PercentNulled = IncrementedNullableInt32.MixIn(9, 10, 1, (Int32?)null).ToArray();
                    public static Int64[] IncrementedInt64 = Enumerable.Range(0, 1000).Select(i => ConvertToInt64(i)).ToArray();
        public static Int64[] DecrementedInt64 = Enumerable.Range(0, 1000).Select(i => ConvertToInt64(999 - i)).ToArray();
        public static Int64[] UpAndDownInt64 = IncrementedInt64.Interweave(DecrementedInt64).Take(1000).ToArray();
        public static Int64[] ShuffledInt64 = IncrementedInt64.ToShuffled(1).ToArray();
        public static Int64[] EmptyInt64 = new Int64[0];
        public static Int64[] SolitaireInt64 = new Int64[]{ConvertToInt64(0)};
     
        public static Int64?[] IncrementedNullableInt64 = Enumerable.Range(0, 1000).Select(i => (Int64?)ConvertToInt64(i)).ToArray();
        public static Int64?[] DecrementedNullableInt64 = Enumerable.Range(0, 1000).Select(i => (Int64?)ConvertToInt64(999 - i)).ToArray();
        public static Int64?[] UpAndDownNullableInt64 = IncrementedNullableInt64.Interweave(DecrementedNullableInt64).ToArray();
        public static Int64?[] ShuffledNullableInt64 = IncrementedNullableInt64.ToShuffled(1).ToArray();
        public static Int64?[] EmptyNullableInt64 = new Int64?[0];
        public static Int64?[] SolitaireNullableInt64 = new Int64?[]{ConvertToInt64(0)};
        public static Int64?[] SolitaireNullInt64 = new Int64?[]{null};
                    public static Int64?[] NullableInt6410PercentNulled = IncrementedNullableInt64.MixIn(1, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6420PercentNulled = IncrementedNullableInt64.MixIn(2, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6430PercentNulled = IncrementedNullableInt64.MixIn(3, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6440PercentNulled = IncrementedNullableInt64.MixIn(4, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6450PercentNulled = IncrementedNullableInt64.MixIn(5, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6460PercentNulled = IncrementedNullableInt64.MixIn(6, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6470PercentNulled = IncrementedNullableInt64.MixIn(7, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6480PercentNulled = IncrementedNullableInt64.MixIn(8, 10, 1, (Int64?)null).ToArray();
                    public static Int64?[] NullableInt6490PercentNulled = IncrementedNullableInt64.MixIn(9, 10, 1, (Int64?)null).ToArray();
                    public static Single[] IncrementedSingle = Enumerable.Range(0, 1000).Select(i => ConvertToSingle(i)).ToArray();
        public static Single[] DecrementedSingle = Enumerable.Range(0, 1000).Select(i => ConvertToSingle(999 - i)).ToArray();
        public static Single[] UpAndDownSingle = IncrementedSingle.Interweave(DecrementedSingle).Take(1000).ToArray();
        public static Single[] ShuffledSingle = IncrementedSingle.ToShuffled(1).ToArray();
        public static Single[] EmptySingle = new Single[0];
        public static Single[] SolitaireSingle = new Single[]{ConvertToSingle(0)};
     
        public static Single?[] IncrementedNullableSingle = Enumerable.Range(0, 1000).Select(i => (Single?)ConvertToSingle(i)).ToArray();
        public static Single?[] DecrementedNullableSingle = Enumerable.Range(0, 1000).Select(i => (Single?)ConvertToSingle(999 - i)).ToArray();
        public static Single?[] UpAndDownNullableSingle = IncrementedNullableSingle.Interweave(DecrementedNullableSingle).ToArray();
        public static Single?[] ShuffledNullableSingle = IncrementedNullableSingle.ToShuffled(1).ToArray();
        public static Single?[] EmptyNullableSingle = new Single?[0];
        public static Single?[] SolitaireNullableSingle = new Single?[]{ConvertToSingle(0)};
        public static Single?[] SolitaireNullSingle = new Single?[]{null};
                    public static Single?[] NullableSingle10PercentNulled = IncrementedNullableSingle.MixIn(1, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle20PercentNulled = IncrementedNullableSingle.MixIn(2, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle30PercentNulled = IncrementedNullableSingle.MixIn(3, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle40PercentNulled = IncrementedNullableSingle.MixIn(4, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle50PercentNulled = IncrementedNullableSingle.MixIn(5, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle60PercentNulled = IncrementedNullableSingle.MixIn(6, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle70PercentNulled = IncrementedNullableSingle.MixIn(7, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle80PercentNulled = IncrementedNullableSingle.MixIn(8, 10, 1, (Single?)null).ToArray();
                    public static Single?[] NullableSingle90PercentNulled = IncrementedNullableSingle.MixIn(9, 10, 1, (Single?)null).ToArray();
                    public static Double[] IncrementedDouble = Enumerable.Range(0, 1000).Select(i => ConvertToDouble(i)).ToArray();
        public static Double[] DecrementedDouble = Enumerable.Range(0, 1000).Select(i => ConvertToDouble(999 - i)).ToArray();
        public static Double[] UpAndDownDouble = IncrementedDouble.Interweave(DecrementedDouble).Take(1000).ToArray();
        public static Double[] ShuffledDouble = IncrementedDouble.ToShuffled(1).ToArray();
        public static Double[] EmptyDouble = new Double[0];
        public static Double[] SolitaireDouble = new Double[]{ConvertToDouble(0)};
     
        public static Double?[] IncrementedNullableDouble = Enumerable.Range(0, 1000).Select(i => (Double?)ConvertToDouble(i)).ToArray();
        public static Double?[] DecrementedNullableDouble = Enumerable.Range(0, 1000).Select(i => (Double?)ConvertToDouble(999 - i)).ToArray();
        public static Double?[] UpAndDownNullableDouble = IncrementedNullableDouble.Interweave(DecrementedNullableDouble).ToArray();
        public static Double?[] ShuffledNullableDouble = IncrementedNullableDouble.ToShuffled(1).ToArray();
        public static Double?[] EmptyNullableDouble = new Double?[0];
        public static Double?[] SolitaireNullableDouble = new Double?[]{ConvertToDouble(0)};
        public static Double?[] SolitaireNullDouble = new Double?[]{null};
                    public static Double?[] NullableDouble10PercentNulled = IncrementedNullableDouble.MixIn(1, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble20PercentNulled = IncrementedNullableDouble.MixIn(2, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble30PercentNulled = IncrementedNullableDouble.MixIn(3, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble40PercentNulled = IncrementedNullableDouble.MixIn(4, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble50PercentNulled = IncrementedNullableDouble.MixIn(5, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble60PercentNulled = IncrementedNullableDouble.MixIn(6, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble70PercentNulled = IncrementedNullableDouble.MixIn(7, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble80PercentNulled = IncrementedNullableDouble.MixIn(8, 10, 1, (Double?)null).ToArray();
                    public static Double?[] NullableDouble90PercentNulled = IncrementedNullableDouble.MixIn(9, 10, 1, (Double?)null).ToArray();
                    public static Decimal[] IncrementedDecimal = Enumerable.Range(0, 1000).Select(i => ConvertToDecimal(i)).ToArray();
        public static Decimal[] DecrementedDecimal = Enumerable.Range(0, 1000).Select(i => ConvertToDecimal(999 - i)).ToArray();
        public static Decimal[] UpAndDownDecimal = IncrementedDecimal.Interweave(DecrementedDecimal).Take(1000).ToArray();
        public static Decimal[] ShuffledDecimal = IncrementedDecimal.ToShuffled(1).ToArray();
        public static Decimal[] EmptyDecimal = new Decimal[0];
        public static Decimal[] SolitaireDecimal = new Decimal[]{ConvertToDecimal(0)};
     
        public static Decimal?[] IncrementedNullableDecimal = Enumerable.Range(0, 1000).Select(i => (Decimal?)ConvertToDecimal(i)).ToArray();
        public static Decimal?[] DecrementedNullableDecimal = Enumerable.Range(0, 1000).Select(i => (Decimal?)ConvertToDecimal(999 - i)).ToArray();
        public static Decimal?[] UpAndDownNullableDecimal = IncrementedNullableDecimal.Interweave(DecrementedNullableDecimal).ToArray();
        public static Decimal?[] ShuffledNullableDecimal = IncrementedNullableDecimal.ToShuffled(1).ToArray();
        public static Decimal?[] EmptyNullableDecimal = new Decimal?[0];
        public static Decimal?[] SolitaireNullableDecimal = new Decimal?[]{ConvertToDecimal(0)};
        public static Decimal?[] SolitaireNullDecimal = new Decimal?[]{null};
                    public static Decimal?[] NullableDecimal10PercentNulled = IncrementedNullableDecimal.MixIn(1, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal20PercentNulled = IncrementedNullableDecimal.MixIn(2, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal30PercentNulled = IncrementedNullableDecimal.MixIn(3, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal40PercentNulled = IncrementedNullableDecimal.MixIn(4, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal50PercentNulled = IncrementedNullableDecimal.MixIn(5, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal60PercentNulled = IncrementedNullableDecimal.MixIn(6, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal70PercentNulled = IncrementedNullableDecimal.MixIn(7, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal80PercentNulled = IncrementedNullableDecimal.MixIn(8, 10, 1, (Decimal?)null).ToArray();
                    public static Decimal?[] NullableDecimal90PercentNulled = IncrementedNullableDecimal.MixIn(9, 10, 1, (Decimal?)null).ToArray();
                    public static String[] IncrementedString = Enumerable.Range(0, 1000).Select(i => ConvertToString(i)).ToArray();
        public static String[] DecrementedString = Enumerable.Range(0, 1000).Select(i => ConvertToString(999 - i)).ToArray();
        public static String[] UpAndDownString = IncrementedString.Interweave(DecrementedString).Take(1000).ToArray();
        public static String[] ShuffledString = IncrementedString.ToShuffled(1).ToArray();
        public static String[] EmptyString = new String[0];
        public static String[] SolitaireString = new String[]{ConvertToString(0)};
    public static String[] SolitaireNullString = new String[]{null};        public static String[] String10PercentNulled = IncrementedString.MixIn(1, 10, 1, (String)null).ToArray();
            public static String[] String20PercentNulled = IncrementedString.MixIn(2, 10, 1, (String)null).ToArray();
            public static String[] String30PercentNulled = IncrementedString.MixIn(3, 10, 1, (String)null).ToArray();
            public static String[] String40PercentNulled = IncrementedString.MixIn(4, 10, 1, (String)null).ToArray();
            public static String[] String50PercentNulled = IncrementedString.MixIn(5, 10, 1, (String)null).ToArray();
            public static String[] String60PercentNulled = IncrementedString.MixIn(6, 10, 1, (String)null).ToArray();
            public static String[] String70PercentNulled = IncrementedString.MixIn(7, 10, 1, (String)null).ToArray();
            public static String[] String80PercentNulled = IncrementedString.MixIn(8, 10, 1, (String)null).ToArray();
            public static String[] String90PercentNulled = IncrementedString.MixIn(9, 10, 1, (String)null).ToArray();
            public static DateTime[] IncrementedDateTime = Enumerable.Range(0, 1000).Select(i => ConvertToDateTime(i)).ToArray();
        public static DateTime[] DecrementedDateTime = Enumerable.Range(0, 1000).Select(i => ConvertToDateTime(999 - i)).ToArray();
        public static DateTime[] UpAndDownDateTime = IncrementedDateTime.Interweave(DecrementedDateTime).Take(1000).ToArray();
        public static DateTime[] ShuffledDateTime = IncrementedDateTime.ToShuffled(1).ToArray();
        public static DateTime[] EmptyDateTime = new DateTime[0];
        public static DateTime[] SolitaireDateTime = new DateTime[]{ConvertToDateTime(0)};
     
        public static DateTime?[] IncrementedNullableDateTime = Enumerable.Range(0, 1000).Select(i => (DateTime?)ConvertToDateTime(i)).ToArray();
        public static DateTime?[] DecrementedNullableDateTime = Enumerable.Range(0, 1000).Select(i => (DateTime?)ConvertToDateTime(999 - i)).ToArray();
        public static DateTime?[] UpAndDownNullableDateTime = IncrementedNullableDateTime.Interweave(DecrementedNullableDateTime).ToArray();
        public static DateTime?[] ShuffledNullableDateTime = IncrementedNullableDateTime.ToShuffled(1).ToArray();
        public static DateTime?[] EmptyNullableDateTime = new DateTime?[0];
        public static DateTime?[] SolitaireNullableDateTime = new DateTime?[]{ConvertToDateTime(0)};
        public static DateTime?[] SolitaireNullDateTime = new DateTime?[]{null};
                    public static DateTime?[] NullableDateTime10PercentNulled = IncrementedNullableDateTime.MixIn(1, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime20PercentNulled = IncrementedNullableDateTime.MixIn(2, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime30PercentNulled = IncrementedNullableDateTime.MixIn(3, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime40PercentNulled = IncrementedNullableDateTime.MixIn(4, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime50PercentNulled = IncrementedNullableDateTime.MixIn(5, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime60PercentNulled = IncrementedNullableDateTime.MixIn(6, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime70PercentNulled = IncrementedNullableDateTime.MixIn(7, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime80PercentNulled = IncrementedNullableDateTime.MixIn(8, 10, 1, (DateTime?)null).ToArray();
                    public static DateTime?[] NullableDateTime90PercentNulled = IncrementedNullableDateTime.MixIn(9, 10, 1, (DateTime?)null).ToArray();
                    public static ExampleReferenceType[] IncrementedExampleReferenceType = Enumerable.Range(0, 1000).Select(i => ConvertToExampleReferenceType(i)).ToArray();
        public static ExampleReferenceType[] DecrementedExampleReferenceType = Enumerable.Range(0, 1000).Select(i => ConvertToExampleReferenceType(999 - i)).ToArray();
        public static ExampleReferenceType[] UpAndDownExampleReferenceType = IncrementedExampleReferenceType.Interweave(DecrementedExampleReferenceType).Take(1000).ToArray();
        public static ExampleReferenceType[] ShuffledExampleReferenceType = IncrementedExampleReferenceType.ToShuffled(1).ToArray();
        public static ExampleReferenceType[] EmptyExampleReferenceType = new ExampleReferenceType[0];
        public static ExampleReferenceType[] SolitaireExampleReferenceType = new ExampleReferenceType[]{ConvertToExampleReferenceType(0)};
    public static ExampleReferenceType[] SolitaireNullExampleReferenceType = new ExampleReferenceType[]{null};        public static ExampleReferenceType[] ExampleReferenceType10PercentNulled = IncrementedExampleReferenceType.MixIn(1, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType20PercentNulled = IncrementedExampleReferenceType.MixIn(2, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType30PercentNulled = IncrementedExampleReferenceType.MixIn(3, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType40PercentNulled = IncrementedExampleReferenceType.MixIn(4, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType50PercentNulled = IncrementedExampleReferenceType.MixIn(5, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType60PercentNulled = IncrementedExampleReferenceType.MixIn(6, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType70PercentNulled = IncrementedExampleReferenceType.MixIn(7, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType80PercentNulled = IncrementedExampleReferenceType.MixIn(8, 10, 1, (ExampleReferenceType)null).ToArray();
            public static ExampleReferenceType[] ExampleReferenceType90PercentNulled = IncrementedExampleReferenceType.MixIn(9, 10, 1, (ExampleReferenceType)null).ToArray();
            public static Single[] Single10PercentNaN = IncrementedSingle.MixIn(1, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle10PercentNaNOrNull = IncrementedNullableSingle.MixIn(1, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single20PercentNaN = IncrementedSingle.MixIn(2, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle20PercentNaNOrNull = IncrementedNullableSingle.MixIn(2, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single30PercentNaN = IncrementedSingle.MixIn(3, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle30PercentNaNOrNull = IncrementedNullableSingle.MixIn(3, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single40PercentNaN = IncrementedSingle.MixIn(4, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle40PercentNaNOrNull = IncrementedNullableSingle.MixIn(4, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single50PercentNaN = IncrementedSingle.MixIn(5, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle50PercentNaNOrNull = IncrementedNullableSingle.MixIn(5, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single60PercentNaN = IncrementedSingle.MixIn(6, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle60PercentNaNOrNull = IncrementedNullableSingle.MixIn(6, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single70PercentNaN = IncrementedSingle.MixIn(7, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle70PercentNaNOrNull = IncrementedNullableSingle.MixIn(7, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single80PercentNaN = IncrementedSingle.MixIn(8, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle80PercentNaNOrNull = IncrementedNullableSingle.MixIn(8, 10, 1, Single.NaN, null).ToArray();
        public static Single[] Single90PercentNaN = IncrementedSingle.MixIn(9, 10, 1, Single.NaN).ToArray();
        public static Single?[] NullableSingle90PercentNaNOrNull = IncrementedNullableSingle.MixIn(9, 10, 1, Single.NaN, null).ToArray();
        public static Double[] Double10PercentNaN = IncrementedDouble.MixIn(1, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble10PercentNaNOrNull = IncrementedNullableDouble.MixIn(1, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double20PercentNaN = IncrementedDouble.MixIn(2, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble20PercentNaNOrNull = IncrementedNullableDouble.MixIn(2, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double30PercentNaN = IncrementedDouble.MixIn(3, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble30PercentNaNOrNull = IncrementedNullableDouble.MixIn(3, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double40PercentNaN = IncrementedDouble.MixIn(4, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble40PercentNaNOrNull = IncrementedNullableDouble.MixIn(4, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double50PercentNaN = IncrementedDouble.MixIn(5, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble50PercentNaNOrNull = IncrementedNullableDouble.MixIn(5, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double60PercentNaN = IncrementedDouble.MixIn(6, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble60PercentNaNOrNull = IncrementedNullableDouble.MixIn(6, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double70PercentNaN = IncrementedDouble.MixIn(7, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble70PercentNaNOrNull = IncrementedNullableDouble.MixIn(7, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double80PercentNaN = IncrementedDouble.MixIn(8, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble80PercentNaNOrNull = IncrementedNullableDouble.MixIn(8, 10, 1, Double.NaN, null).ToArray();
        public static Double[] Double90PercentNaN = IncrementedDouble.MixIn(9, 10, 1, Double.NaN).ToArray();
        public static Double?[] NullableDouble90PercentNaNOrNull = IncrementedNullableDouble.MixIn(9, 10, 1, Double.NaN, null).ToArray();
    }
}